---------------------------------------------------------------
/* 회원정보 */ 
DROP TABLE MEMBER_INFO;

CREATE TABLE MEMBER_INFO (
    MEMBER_ID       VARCHAR2(20) PRIMARY KEY,
    MEMBER_NAME     VARCHAR2(20) UNIQUE,
    MEMBER_PHONE    VARCHAR2(20) );
         
    
/* 회원 정보 입력 */
INSERT INTO MEMBER_INFO VALUES(TO_CHAR(SEQ_MEMBER_ID.NEXTVAL), '미스조', '010-4443-2345');
INSERT INTO MEMBER_INFO VALUES(TO_CHAR(SEQ_MEMBER_ID.NEXTVAL), '미스우', '010-4566-3456');
INSERT INTO MEMBER_INFO VALUES(TO_CHAR(SEQ_MEMBER_ID.NEXTVAL), '미스박', '010-1234-5674');
INSERT INTO MEMBER_INFO VALUES(TO_CHAR(SEQ_MEMBER_ID.NEXTVAL), '조동주', '010-5234-4578');
INSERT INTO MEMBER_INFO VALUES(TO_CHAR(SEQ_MEMBER_ID.NEXTVAL), '조혜경', '010-2376-9756');
INSERT INTO MEMBER_INFO VALUES(TO_CHAR(SEQ_MEMBER_ID.NEXTVAL), '박하늘', '010-3452-6785');
INSERT INTO MEMBER_INFO VALUES(TO_CHAR(SEQ_MEMBER_ID.NEXTVAL), '정재이', '010-1135-3467');
INSERT INTO MEMBER_INFO VALUES(TO_CHAR(SEQ_MEMBER_ID.NEXTVAL), '이종석', '010-3574-2367');
INSERT INTO MEMBER_INFO VALUES(TO_CHAR(SEQ_MEMBER_ID.NEXTVAL), '임윤아', '010-3567-3457');
INSERT INTO MEMBER_INFO VALUES(TO_CHAR(SEQ_MEMBER_ID.NEXTVAL), '이주연', '010-7888-5678');
INSERT INTO MEMBER_INFO VALUES(TO_CHAR(SEQ_MEMBER_ID.NEXTVAL), '곰돌이 사육사', '010-3333-7788');
INSERT INTO MEMBER_INFO VALUES(TO_CHAR(SEQ_MEMBER_ID.NEXTVAL), '사육사', '010-5678-9804');
INSERT INTO MEMBER_INFO VALUES(TO_CHAR(SEQ_MEMBER_ID.NEXTVAL), '이영지', '010-9374-2345');

/* 회원번호 생성 시퀀스 */
CREATE SEQUENCE SEQ_MEMBER_ID
START WITH 5000
INCREMENT BY 1
NOCYCLE
NOCACHE;

DROP SEQUENCE SEQ_MEMBER_ID;


SELECT *
FROM MEMBER_INFO;


-- 1) 메뉴 테이블
CREATE TABLE MENU_INFO (
	MPART    NUMBER,
	PARTNAME VARCHAR(20),
	MNO      NUMBER PRIMARY KEY, -- 기본키
	MNAME    VARCHAR(20) UNIQUE,
	MPRICE   NUMBER
);

INSERT INTO MENU_INFO VALUES (1000, '커피', 1001, '에스프레소', 2500);
INSERT INTO MENU_INFO VALUES (1000, '커피', 1002, '아메리카노', 4000);
INSERT INTO MENU_INFO VALUES (1000, '커피',  1003, '라떼', 5000);
INSERT INTO MENU_INFO VALUES (1000, '커피',  1004, '카페모카', 5500);
INSERT INTO MENU_INFO VALUES (2000, '논커피',  2001, '초코우유', 2500);
INSERT INTO MENU_INFO VALUES (2000, '논커피',  2002, '녹차', 2500);
INSERT INTO MENU_INFO VALUES (2000, '논커피',  2003, '홍차', 2500);
INSERT INTO MENU_INFO VALUES (2000, '논커피',  2004, '밀크티', 2500);

SELECT * FROM MENU_INFO;
DROP TABLE MENU_INFO;

------------------------------------------------------------------
-- 2) 옵션 코드 테이블
CREATE TABLE OPTION_CODE_INFO (
	OPTION_CODE   VARCHAR(20) PRIMARY KEY,
	OPTION_NAME   VARCHAR(20)
);

INSERT INTO OPTION_CODE_INFO VALUES ('001', '사이즈 업');
INSERT INTO OPTION_CODE_INFO VALUES ('002', '샷 추가');
INSERT INTO OPTION_CODE_INFO VALUES ('003', '시럽 추가');

SELECT * FROM OPTION_CODE_INFO;

------------------------------------------------------------------
-- 3) 상품별 옵션 정보 테이블
CREATE TABLE OPTION_INFO (
	MNO           NUMBER,
	OPTION_CODE   VARCHAR(20),
	OPTION_PRICE  NUMBER
);

INSERT INTO OPTION_INFO VALUES (1001, '002', 500);
INSERT INTO OPTION_INFO VALUES (1002, '001', 500);
INSERT INTO OPTION_INFO VALUES (1002, '002', 500);
INSERT INTO OPTION_INFO VALUES (1002, '003', 300);
INSERT INTO OPTION_INFO VALUES (1003, '001', 500);
INSERT INTO OPTION_INFO VALUES (1003, '002', 500);
INSERT INTO OPTION_INFO VALUES (1003, '003', 300);
INSERT INTO OPTION_INFO VALUES (1004, '001', 500);
INSERT INTO OPTION_INFO VALUES (1004, '002', 500);
INSERT INTO OPTION_INFO VALUES (1004, '003', 300);
INSERT INTO OPTION_INFO VALUES (2001, '001', 500);


SELECT * FROM OPTION_INFO;
DROP TABLE OPTION_INFO;

------------------------------------------------------------------
-- 어떤 메뉴를 선택하시겠습니까? (한글로 선택할 것)
SELECT MNO, MNAME, MPRICE
FROM MENU_INFO;


-- 옵션을 선택해주세요
SELECT C.OPTION_CODE, C.OPTION_NAME
FROM MENU_INFO M
INNER JOIN OPTION_INFO O ON M.MNO = O.MNO
INNER JOIN OPTION_CODE_INFO C ON O.OPTION_CODE = C.OPTION_CODE
WHERE M.MNAME = '아메리카노';

------------------------------------------------------------------

-- 4) 주문 테이블
CREATE TABLE ORDER_INFO (
    ORDER_DATE  DATE,
    MEMBER_ID   VARCHAR2(30),
    ORDER_NO    NUMBER DEFAULT 0 PRIMARY KEY,
    MNO         NUMBER,
    PRICE NUMBER DEFAULT 0
);


DESC ORDER_INFO;

-- SET @MNAME = '아메리카노';
-- SET @MNO = (SELECT MNO FROM MENU_INFO WHERE MNAME = @MNAME);
--    
INSERT INTO ORDER_INFO (MEMBER_ID, ORDER_DATE, ORDER_NO, MNO) 
    VALUES ('5001', SYSDATE, SEQ_ORDER_NO.NEXTVAL, '1002');
    
INSERT INTO ORDER_INFO (MEMBER_ID, ORDER_DATE, ORDER_NO, MNO)
    VALUES ('5001', SYSDATE, SEQ_ORDER_NO.NEXTVAL, '1003');

INSERT INTO ORDER_INFO (MEMBER_ID, ORDER_DATE, ORDER_NO, MNO)
    VALUES ('5002', SYSDATE, SEQ_ORDER_NO.NEXTVAL, '1004');
    
INSERT INTO ORDER_INFO (MEMBER_ID, ORDER_DATE, ORDER_NO, MNO) -- 비회원일 경우 앞에 'N' 붙여줌
    VALUES (CONCAT('N', SEQ_NON_MEM_NO.NEXTVAL), SYSDATE, SEQ_ORDER_NO.NEXTVAL, '1002');  

DELETE FROM ORDER_INFO;


SELECT * FROM ORDER_INFO;
DROP TABLE ORDER_INFO;


/* 주문번호 */
CREATE SEQUENCE SEQ_ORDER_NO
START WITH 1 -- 몇번부터 시작할래
INCREMENT BY 1  -- 몇씩 증가시킬 것인가.
NOCYCLE -- 반복하지 않음
NOCACHE;

DROP SEQUENCE SEQ_ORDER_NO;

/* 비회원 번호 */
CREATE SEQUENCE SEQ_NON_MEM_NO
START WITH 1 -- 몇번부터 시작할래
INCREMENT BY 1  -- 몇씩 증가시킬 것인가.
NOCYCLE -- 반복하지 않음
NOCACHE;

DROP SEQUENCE SEQ_NON_MEM_NO;

------------------------------------------------------------------
-- 5) 주문 상세 테이블 (옵션 선택)
CREATE TABLE ORDER_DETAIL (
    ORDER_NO NUMBER,  
    OPTION_CODE VARCHAR(20), -- 1 : 사이즈업, 2 : 샷추가, 3 : 시럽추가
    OPTION_COUNT NUMBER
);
    
INSERT INTO ORDER_DETAIL(ORDER_NO, OPTION_CODE, OPTION_COUNT) 
    VALUES (1, '002', 1);
INSERT INTO ORDER_DETAIL(ORDER_NO, OPTION_CODE, OPTION_COUNT) 
    VALUES (2, '003', 1);
INSERT INTO ORDER_DETAIL(ORDER_NO, OPTION_CODE, OPTION_COUNT) 
    VALUES (3, '001', 1);
INSERT INTO ORDER_DETAIL(ORDER_NO, OPTION_CODE, OPTION_COUNT) 
    VALUES (3, '002', 1);
INSERT INTO ORDER_DETAIL(ORDER_NO, OPTION_CODE, OPTION_COUNT) 
    VALUES (5, '001', 1);
INSERT INTO ORDER_DETAIL(ORDER_NO, OPTION_CODE, OPTION_COUNT) 
    VALUES (6, '001', 1);
INSERT INTO ORDER_DETAIL(ORDER_NO, OPTION_CODE, OPTION_COUNT) 
    VALUES (6, '002', 1);
INSERT INTO ORDER_DETAIL(ORDER_NO, OPTION_CODE, OPTION_COUNT) 
    VALUES (7, '001', 1);
INSERT INTO ORDER_DETAIL(ORDER_NO, OPTION_CODE, OPTION_COUNT) 
    VALUES (8, '001', 1);
INSERT INTO ORDER_DETAIL(ORDER_NO, OPTION_CODE, OPTION_COUNT) 
    VALUES (8, '002', 1);

SELECT * FROM ORDER_DETAIL;
DROP TABLE ORDER_DETAIL;

------------------------------------------------------------------
-- 6) 영수증
SELECT OI.ORDER_DATE AS 날짜,
    NVL(MI.MEMBER_NAME, '비회원') AS 닉네임,
    M.MNAME AS 메뉴명, 
    NVL(LISTAGG(CI.OPTION_NAME, ',') WITHIN GROUP(ORDER BY CI.OPTION_NAME), ' ') AS 옵션,
    OI.PRICE AS 총금액
FROM ORDER_INFO OI 
    INNER JOIN MENU_INFO M
        ON OI.MNO = M.MNO
    LEFT JOIN ORDER_DETAIL D
        ON OI.ORDER_NO = D.ORDER_NO   
    LEFT JOIN OPTION_CODE_INFO CI            
        ON CI.OPTION_CODE = D.OPTION_CODE
    LEFT JOIN MEMBER_INFO MI
        ON MI.MEMBER_ID = OI.MEMBER_ID
GROUP BY OI.ORDER_DATE, M.MNAME, OI.PRICE, MI.MEMBER_NAME;
    
------------------------------------------------------------------
-- 총액 > ORDER_INFO 테이블 PRICE에 UPDATE
UPDATE ORDER_INFO OI
    SET OI.PRICE = (SELECT M.MPRICE + NVL(SUM(OPTION_PRICE * OPTION_COUNT), 0)
    FROM  ORDER_INFO OI 
    LEFT JOIN ORDER_DETAIL D -- ORDER_INFO 데이터를 무조건 가져오겠다! 
        ON OI.ORDER_NO = D.ORDER_NO
    INNER JOIN MENU_INFO M 
        ON OI.MNO = M.MNO
    LEFT JOIN OPTION_INFO I 
        ON D.OPTION_CODE = I.OPTION_CODE 
            AND OI.MNO = I.MNO
    WHERE OI.ORDER_NO = '8'
    GROUP BY M.MPRICE)
    WHERE OI.ORDER_NO = '8';

SELECT * FROM ORDER_INFO;
    
------------------------------------------------------
/* 일별 집계 */
SELECT NVL(TO_CHAR(A.ORDER_DATE), '전체') AS 날짜, 
    NVL(A.MNAME, '합계') 메뉴명,
    COUNT(A.MNAME) AS 판매량,
    SUM(A.TOTAL_PRICE) AS "총매출액",
    (CASE NVL(A.MNAME, '합계')
        WHEN '합계' THEN TO_CHAR(COUNT(DISTINCT(A.MEMBER_ID)))
        ELSE ' '
    END) AS "방문자수"
FROM (
    SELECT OI.MEMBER_ID, OI.ORDER_DATE, M.MNAME, COUNT(DISTINCT(OI.ORDER_NO)) AS CNT, M.MPRICE + NVL(SUM(I.OPTION_PRICE * D.OPTION_COUNT), 0) AS TOTAL_PRICE
    FROM ORDER_INFO OI 
        INNER JOIN MENU_INFO M 
            ON OI.MNO = M.MNO
        LEFT JOIN ORDER_DETAIL D
            ON OI.ORDER_NO = D.ORDER_NO
        LEFT JOIN OPTION_CODE_INFO CI            
            ON CI.OPTION_CODE = D.OPTION_CODE
        LEFT JOIN OPTION_INFO I
            ON OI.MNO = I.MNO
                AND I.OPTION_CODE = D.OPTION_CODE 
        GROUP BY OI.ORDER_DATE, M.MNAME, M.MPRICE, OI.MEMBER_ID
    ) A 
GROUP BY ROLLUP(A.ORDER_DATE, A.MNAME);
    
------------------------------------------------------
/* 주문 취소 */
DROP TABLE CANCEL_MENU; 
SELECT * FROM CANCEL_MENU;

CREATE TABLE CANCEL_MENU (
    MEMBER_ID VARCHAR2(20),
    ORDER_NO  NUMBER,
    CANCEL_YN VARCHAR2(1) CHECK (CANCEL_YN = 'Y' OR CANCEL_YN = 'N')
); 

INSERT INTO CANCEL_MENU VALUES ('5001', 5, 'Y');

                                
DELETE FROM ORDER_DETAIL D
    WHERE D.ORDER_NO IN ( SELECT OI.ORDER_NO
                            FROM ORDER_INFO OI
                            INNER JOIN CANCEL_MENU CM
                                ON OI.MEMBER_ID = CM.MEMBER_ID
                            WHERE CM.CANCEL_YN = 'Y' );                                
                                                               
DELETE FROM ORDER_INFO OI
    WHERE(OI.ORDER_NO) = ( SELECT CM.ORDER_NO
                               FROM CANCEL_MENU CM
                                WHERE CM.CANCEL_YN = 'Y' );

SELECT *
FROM ORDER_INFO;

SELECT *
FROM ORDER_DETAIL;
 


    
    
    
    
    
/* 트리거 만들기 */
CREATE OR REPLACE TRIGGER TRI_CANCEL
BEFORE DELETE ON ORDER_INFO
FOR EACH ROW
[WHEN (<조건>)]

[DECLARE <변수선언>]

BEGIN

         <실행코드>

[EXCEPTION <예외사항>]

END <트리거 이름>;
    
    
    
    
SELECT M.MNO, C.OPTION_CODE, C.OPTION_NAME, O.OPTION_PRICE 
                    FROM MENU_INFO M 
                    INNER JOIN OPTION_INFO O ON M.MNO = O.MNO
                    INNER JOIN OPTION_CODE_INFO C ON O.OPTION_CODE = C.OPTION_CODE
                    WHERE M.MNAME = '아메리카노';